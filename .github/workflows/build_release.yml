name: Release Build

on:
  workflow_dispatch:
    inputs:
      TOOLCHAINS:
        type: choice
        description: "使用的工具链"
        required: true
        default: "nightly"
        options:
          - "nightly"
          - "stable"
      TARGET:
        type: choice
        description: "编译的目标三元组"
        required: true
        default: "x86_64-pc-windows-msvc"
        options:
          - "aarch64-unknown-linux-musl"
          - "x86_64-unknown-linux-musl"
          - "x86_64-pc-windows-msvc"
          - "aarch64-apple-darwin"
          - "x86_64-apple-darwin"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Optimize build performance
  CARGO_INCREMENTAL: 0
  TZ: Asia/Shanghai

jobs:
  # Build strategy check - determine build type based on trigger
  build-check:
    name: Build Strategy Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Show Selected Inputs
        run: |
          echo "-----------------------"
          echo "Selected TOOLCHAINS: ${{ github.event.inputs.TOOLCHAINS }}"
          echo "Selected TARGET: ${{ github.event.inputs.TARGET }}"
          echo "-----------------------"

  # Build RustFS binaries
  build-utils:
    name: Build Utils
    needs: [build-check]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    env:
      RUSTFLAGS: ${{ matrix.cross == 'false' && '-C target-cpu=native' || '' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          - os: ${{ contains(github.event.inputs.TARGET, 'windows') && 'windows' || (contains(github.event.inputs.TARGET, 'apple') && 'macos' || 'ubuntu') }}-latest
            target: ${{ github.event.inputs.TARGET }}
            cross: ${{ contains(github.event.inputs.TARGET, 'linux') && 'true' || 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Rust environment
        uses: ./.github/actions/setup
        with:
          rust-version: ${{ github.event.inputs.TOOLCHAINS }}
          target: ${{ matrix.target }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          install-cross-tools: ${{ matrix.cross }}

      - name: Configure Git
        shell: bash
        run: |
          git config --global user.name "Numbersf"
          git config --global user.email "263623064@qq.com"

      - name: Setup TimeZone
        if: runner.os == 'Linux'
        run: |
          sudo -E rm -rf /etc/localtime
          sudo -E ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Install dependency
        shell: bash
        run: |
          pip install meson ninja

      - name: Show version
        shell: bash
        run: |
          meson --version
          ninja --version
          where ninja
          where meson

      - name: Download & unpack WinFlexBison
        shell: bash
        run: |
          curl -L -o flexbison.zip https://github.com/lexxmark/winflexbison/releases/download/v2.5.25/win_flex_bison-2.5.25.zip
          mkdir win_flex_bison_dir
          unzip flexbison.zip -d win_flex_bison_dir || true

      - name: Install flex
        shell: bash
        run: |
          cp -r win_flex_bison_dir/* /c/hostedtoolcache/windows/Python/3.9.13/x64/Scripts

      - name: Clone postgre sources
        shell: bash
        run: |
          git clone --depth 1 https://github.com/postgres/postgres
          cd postgres
          git config --global core.autocrlf false
          git config --global core.eol lf
          git rm --cached -r .
          git reset --hard
          pwd
          # export PATH="./win_flex_bison_dir:$PATH"
          meson setup build --buildtype=release --prefix="/d/a/postgre_action/postgre_action/postgres/114514"
          ninja -C build


      - name: Upload to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.TARGET }}_cli_${{ github.event.inputs.TOOLCHAINS }}
          path: 114514/*
          retention-days: 2
